[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Qualitas AG Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/generate_qzwslrm_test_data.html","id":"disclaimer","dir":"Articles","previous_headings":"","what":"Disclaimer","title":"Generate Test Data for qzwslrm","text":"process generating test data used package qzwslrm documented. process generating data file pedigree done files stored extdata directory package. Hence following R-code chunks evaluated, visible documentation.","code":""},{"path":"/articles/generate_qzwslrm_test_data.html","id":"data-simulation","dir":"Articles","previous_headings":"","what":"Data Simulation","title":"Generate Test Data for qzwslrm","text":"functionality implemented qzwslrm tested dataset generated using simulation program QMSim. parameter input QMSim taken Macedo et al (2020) adapted. main difference original input parameter reduction number male female animals per generation. get smaller datafiles, number animals per generation reduced factor \\(100\\). input parameters simulation started shown Reproducibility data simulation provided moving seed file QMSim data directory.","code":"s_prm_file <- \"qzwslrm_test.prm\" s_sim_param_path <- system.file(\"extdata\", \"qmsim\", s_prm_file, package = \"qzwslrm\") qmsim_cmd <- paste(\"/qualstorzws01/data_projekte/linuxBin/QMSim\", s_sim_param_path) system(command = qmsim_cmd) s_seed_path <- file.path(here::here(), \"vignettes\", \"seed.prv\") if (fs::file_exists(s_seed_path))   fs::file_move(s_seed_path, file.path(here::here(), \"inst\", \"extdata\", \"qmsim\"))"},{"path":"/articles/generate_qzwslrm_test_data.html","id":"phenotypic-data","dir":"Articles","previous_headings":"","what":"Phenotypic Data","title":"Generate Test Data for qzwslrm","text":"QMSim produces number output files. development tests package, mainly require phenotypic data store file called p1_data_001.txt. file copied system files package","code":"qmsim_out_dir <- file.path(here::here(), \"vignettes\", paste0(\"r_\", fs::path_ext_remove(s_prm_file))) s_phen_path <- file.path(qmsim_out_dir, s_qmsim_phen_file) qmsim_ext_dir <- file.path(here::here(), \"inst\", \"extdata\", \"qmsim\") fs::file_move(path = s_phen_path, new_path = qmsim_ext_dir) # remove old qmsim output directory fs::dir_delete(path = qmsim_out_dir)"},{"path":"/articles/generate_qzwslrm_test_data.html","id":"prediction-of-breeding-values","dir":"Articles","previous_headings":"","what":"Prediction of Breeding Values","title":"Generate Test Data for qzwslrm","text":"file phenotypic data used predict breeding values using mix99. can run analysis mix99, data must prepared re-formatted.","code":"s_qsim_data_path <- system.file(\"extdata\", \"qmsim\", s_qmsim_phen_file, package = \"qzwslrm\") # count number of lines n_nr_lines <- as.integer(system(command = paste0(\"wc -l \", s_qsim_data_path, \" | cut -d ' ' -f1\", collapse = \"\"), intern = TRUE)) # read qmsim data tbl_qm_data <- readr::read_table(file = s_qsim_data_path, na = '---', guess_max = n_nr_lines) dim(tbl_qm_data) #> [1] 4995   14"},{"path":"/articles/generate_qzwslrm_test_data.html","id":"generate-data-for-mix99","dir":"Articles","previous_headings":"Prediction of Breeding Values","what":"Generate Data for MiX99","title":"Generate Test Data for qzwslrm","text":"create phenotype input file mix99, data filtered columns selected. checks, number records reported first lines selected data shown phenotypic data written file","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union tbl_mix99_data <- tbl_qm_data %>%   filter(!is.na(Phen)) %>%   mutate(Sex = recode(Sex, `M` = 1, `F` = 2)) %>%   select(Progeny, Sex, Phen) dim(tbl_mix99_data) #> [1] 2679    3 head(tbl_mix99_data) #> # A tibble: 6 × 3 #>   Progeny   Sex   Phen #>     <dbl> <dbl>  <dbl> #> 1      46     2 -0.351 #> 2      47     2 -0.754 #> 3      48     2  0.603 #> 4      49     2  1.30  #> 5      50     2  2.44  #> 6      51     2  0.941 s_mix99_data_dir <- file.path(here::here(), \"inst\", \"extdata\", \"mix99\") if (!fs::dir_exists(s_mix99_data_dir)) fs::dir_create(path = s_mix99_data_dir) s_mix99_data_path <- file.path(s_mix99_data_dir, \"p1_data_001.dat\") readr::write_delim(tbl_mix99_data, file = s_mix99_data_path, delim = \" \", col_names = FALSE)"},{"path":"/articles/generate_qzwslrm_test_data.html","id":"generate-pedigree-for-mix99","dir":"Articles","previous_headings":"Prediction of Breeding Values","what":"Generate Pedigree for MiX99","title":"Generate Test Data for qzwslrm","text":"QMSim data pedigree generated. Check generated tibble first lines Write pedigree file","code":"tbl_mix99_ped <- tbl_qm_data %>%    select(Progeny, Sire, Dam) dim(tbl_mix99_ped) #> [1] 4995    3 head(tbl_mix99_ped) #> # A tibble: 6 × 3 #>   Progeny  Sire   Dam #>     <dbl> <dbl> <dbl> #> 1       1     0     0 #> 2       2     0     0 #> 3       3     0     0 #> 4       4     0     0 #> 5       5     0     0 #> 6       6     0     0 s_mix99_ped_path <- file.path(s_mix99_data_dir, \"p1_data_001.ped\") readr::write_delim(tbl_mix99_ped, file = s_mix99_ped_path, delim = \" \", col_names = FALSE)"},{"path":"/articles/generate_qzwslrm_test_data.html","id":"create-clim-file","dir":"Articles","previous_headings":"Prediction of Breeding Values","what":"Create CLIM File","title":"Generate Test Data for qzwslrm","text":"CLIM file instruction file used MiX99. file phenotypes, pedigree, parameters model specified.","code":"s_mix99_data_dir <- file.path(here::here(), \"inst\", \"extdata\", \"mix99\") s_mix99_clm_path <- file.path(s_mix99_data_dir, 'p1_data_001.clm') cat('#------------------------------------------------------------------\\n', file = s_mix99_clm_path) cat('#                              CLIM\\n', file = s_mix99_clm_path, append = TRUE) cat('#           Command file for a simple animal model analysis.\\n', file = s_mix99_clm_path, append = TRUE) cat('#             MODEL:  phen = sex + animal\\n', file = s_mix99_clm_path, append = TRUE) cat('#------------------------------------------------------------------\\n', file = s_mix99_clm_path, append = TRUE)  cat('DATAFILE  p1_data_001.dat        # Data file\\n', file = s_mix99_clm_path, append = TRUE) cat('MISSING -99999.0        # Number for missing real number\\n', file = s_mix99_clm_path, append = TRUE)  cat('INTEGER   animal sex    # Integer column names\\n', file = s_mix99_clm_path, append = TRUE) cat('REAL      phen          # Real column names\\n', file = s_mix99_clm_path, append = TRUE)  cat('PEDFILE   p1_data_001.ped        # Pedigree file\\n', file = s_mix99_clm_path, append = TRUE) cat('PEDIGREE  animal am     # Genetics associated with animal code: am=animal model \\n', file = s_mix99_clm_path, append = TRUE)  cat('PARFILE   p1_data_001.var        # Variance component file\\n', file = s_mix99_clm_path, append = TRUE)  cat('PRECON b f              # Preconditioner: b=block\\n', file = s_mix99_clm_path, append = TRUE)  cat('MODEL\\n', file = s_mix99_clm_path, append = TRUE) cat('  phen = sex animal # The model\\n', file = s_mix99_clm_path, append = TRUE)"},{"path":"/articles/generate_qzwslrm_test_data.html","id":"writing-parameter-file","dir":"Articles","previous_headings":"Prediction of Breeding Values","what":"Writing Parameter File","title":"Generate Test Data for qzwslrm","text":"parameter file input file contains variance-covariance components. components, possible run predictions breeding values using MiX99.","code":"s_mix99_data_dir <- file.path(here::here(), \"inst\", \"extdata\", \"mix99\") s_mix99_var_path <- file.path(s_mix99_data_dir, 'p1_data_001.var') cat('1  1  1  0.1\\n', file = s_mix99_var_path) cat('2  1  1  0.9\\n', file = s_mix99_var_path, append = TRUE)"},{"path":"/articles/howto.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"How To Use qzwslrm","text":"package qzwslrm can installed Github","code":"# if (!is.element(\"devtools\", installed.packages()) install.packages(\"devtools\") devtools::install_github(\"fbzwsqualitasag/qzwslrm\")"},{"path":"/articles/howto.html","id":"disclaimer","dir":"Articles","previous_headings":"","what":"Disclaimer","title":"How To Use qzwslrm","text":"short introduction use package qzwslrm.","code":""},{"path":"/articles/howto.html","id":"abstract","dir":"Articles","previous_headings":"","what":"Abstract","title":"How To Use qzwslrm","text":"package qzwslrm implements computation EBV validation statistics using LR-method. requires two vectors EBV group animals. One vector contains EBV group animals estimated using full dataset (‘whole’) second vector contains EBV group animals estimated using partial dataset (‘partial’). Given two vectors vec_ebv_whole vec_ebv_partial EBV group animals whole data partial data, respectively, following command computes first set validation statistics.","code":"l_val_result <- val_ebv_lrm(pvec_ebv_partial = tbl_solani_partial$ebv,                              pvec_ebv_whole = tbl_solani_whole$ebv)"},{"path":"/articles/howto.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"How To Use qzwslrm","text":"shown , function val_ebv_lrm() central function computes validation statistics. function val_ebv_lrm() returns list validation statistics. results can shown using summary function summary_lrm() converting tibble.","code":""},{"path":"/articles/howto.html","id":"results","dir":"Articles","previous_headings":"","what":"Results","title":"How To Use qzwslrm","text":"function summary_lrm() can used show summary validation statistics results displayed table can done converting tibble using function knitr::kable().","code":"summary_lrm(l_val_result) #>  #> Bias between partial and whole:  -0.0061 #> Regression whole on partial:         1.0377 #> Correlation whole and partial:       0.9873 #> Regression partial on whole:         0.9393 tbl_lrm <- tibble_lrm(l_val_result) knitr::kable(tbl_lrm)"},{"path":"/articles/howto.html","id":"scatterplot","dir":"Articles","previous_headings":"","what":"Scatterplot","title":"How To Use qzwslrm","text":"comparison two vectors EBV can also illustrated scatterplot. plot can generated using function scatterplot_lrm().  plot shows animal pair EBV whole partial dataset. blue line corresponds linear smoother drawn based points. red line corresponds line slope equal one expected regression line ‘whole’ ‘partial’ EBV. function scatterplot_lrm() requires input two dataframes two columns. first column contains animal ID second column contains EBV.","code":"tbl_ebv_whole <- readr_ebv(ps_path = qzwslrm_example_solani(\"whole\"), ps_format = \"table\",                             pn_ebv_col_idx = 4) tbl_ebv_partial <- readr_ebv(ps_path = qzwslrm_example_solani(\"partial\"), ps_format = \"table\",                               pn_ebv_col_idx = 4) p <- scatterplot_lrm(tbl_ebv_whole, tbl_ebv_partial) print(p)"},{"path":"/articles/qzwslrm_dev.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Development of Package qzwslrm","text":"described Legarra Reverter (2018), validation predicted breeding values becoming important. work uses cross-validation based approach using results successive genetic evaluations. results consist \\(\\hat{u}_p\\) \\(\\hat{u}_w\\) vectors length contain predicted breeding values based “partial” (\\(p\\)) “whole” (\\(w\\)) data, respectively.","code":""},{"path":"/articles/qzwslrm_dev.html","id":"cross-validation-statistics","dir":"Articles","previous_headings":"","what":"Cross-Validation Statistics","title":"Development of Package qzwslrm","text":"following statistics computed based input \\(\\hat{u}_p\\) \\(\\hat{u}_w\\) bias: \\(\\overline{\\hat{u}_p} - \\overline{\\hat{u}_w}\\) regression whole partial: \\(b_{w,p} = \\frac{cov(\\hat{u}_w,\\hat{u}_p)}{var(\\hat{u}_p)}\\) correlation whole partial: \\(r_{w,p} = \\frac{cov(\\hat{u}_w,\\hat{u}_p)}{\\sqrt{var(\\hat{u}_p)var(\\hat{u}_w)}}\\) regression partial whole: \\(b_{p,w} = \\frac{cov(\\hat{u}_w,\\hat{u}_p)}{var(\\hat{u}_w)}\\)","code":""},{"path":"/articles/qzwslrm_dev.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example Data","title":"Development of Package qzwslrm","text":"shown https://fbzwsqualitasag.github.io/qzwslrm/articles/qzwslrm_ebv_mix99.html, example data prepared run basic validation statistics. example data consists two results files MiX99 containing predicted breeding values. first result file contains EBV predicted based complete dataset. second result file contains EBV predicted animals based partial dataset. example, phenotypic observations animals latest generation set missing (NA). files can read using function read_solani() can done partial data","code":"(s_ebv_path_whole <- qzwslrm_example_solani(\"whole\")) #> [1] \"/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani\" (s_ebv_path_partial <- qzwslrm_example_solani(\"partial\")) #> [1] \"/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani\" (tbl_solani_whole <- readr_solani(ps_path = s_ebv_path_whole)) #> Warning: The following named parsers don't match the column names: nprg #> Warning: 3844 parsing failures. #> row col  expected    actual                                                                             file #>   1  -- 4 columns 5 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   2  -- 4 columns 5 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   3  -- 4 columns 5 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   4  -- 4 columns 5 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   6  -- 4 columns 5 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #> ... ... ......... ......... ................................................................................ #> See problems(...) for more details. #> # A tibble: 4,995 × 4 #>    animal nrprg trait      ebv #>     <int> <dbl> <int>    <dbl> #>  1      1    10     1 -0.214   #>  2      2    30     1  0.110   #>  3      3    90     1  0.485   #>  4      4    10     1 -0.154   #>  5      5    20     1  0.0766  #>  6      6    20     1 -0.135   #>  7      7    20     1 -0.0928  #>  8      8    10     1 -0.00596 #>  9      9    10     1 -0.0130  #> 10     10    60     1  0.181   #> # … with 4,985 more rows (tbl_solani_partial <- readr_solani(ps_path = s_ebv_path_partial)) #> Warning: The following named parsers don't match the column names: nprg #> Warning: 3839 parsing failures. #> row col  expected    actual                                                                               file #>   1  -- 4 columns 5 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   2  -- 4 columns 5 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   3  -- 4 columns 5 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   4  -- 4 columns 5 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   6  -- 4 columns 5 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #> ... ... ......... ......... .................................................................................. #> See problems(...) for more details. #> # A tibble: 4,995 × 4 #>    animal nrprg trait      ebv #>     <int> <dbl> <int>    <dbl> #>  1      1    10     1 -0.215   #>  2      2    30     1  0.129   #>  3      3    90     1  0.463   #>  4      4    10     1 -0.154   #>  5      5    20     1  0.0779  #>  6      6    20     1 -0.136   #>  7      7    20     1 -0.0913  #>  8      8    10     1 -0.00620 #>  9      9    10     1 -0.0198  #> 10     10    60     1  0.170   #> # … with 4,985 more rows"},{"path":"/articles/qzwslrm_dev.html","id":"validation","dir":"Articles","previous_headings":"","what":"Validation","title":"Development of Package qzwslrm","text":"validation EBV vectors full partial data required. Hence validation function needs two vectors input.","code":"(l_val_result <- val_ebv_lrm(pvec_ebv_partial = tbl_solani_partial$ebv,                               pvec_ebv_whole = tbl_solani_whole$ebv)) #> $bias #> [1] -0.006104794 #>  #> $reg_wop #> [1] 1.037712 #>  #> $cor_wp #> [1] 0.987303 #>  #> $reg_pow #> [1] 0.9393427"},{"path":"/articles/qzwslrm_dev.html","id":"other-input-formats","dir":"Articles","previous_headings":"","what":"Other Input Formats","title":"Development of Package qzwslrm","text":"reasons flexibility, EBV can read files number different formats ‘csv’, ‘csv2’, ‘delim’ ‘table’. testing purposes different input files produced stored inside package input files included package can obtained read via Testing input format “table” generic function readr_ebv() reading ebv input files can read data files different formats. Furthermore, input files can contain information just EBV. result reader function always tibble two columns. first column contains animal IDs second EBV animal.","code":"# csv s_pkg_input_dir <- file.path(here::here(), \"inst\", \"extdata\", \"ebvinput\") s_csv_input_path <- file.path(s_pkg_input_dir, \"ebv_input.csv\") readr::write_csv(tbl_solani_partial, file = s_csv_input_path)  # csv2 s_csv2_input_path <- file.path(s_pkg_input_dir, \"ebv_input.csv2\") readr::write_csv(tbl_solani_partial, file = s_csv2_input_path)  # delim - .txt s_delim_input_path <- file.path(s_pkg_input_dir, \"ebv_input.txt\") readr::write_delim(tbl_solani_partial, file = s_delim_input_path, delim = \" \") sexdf_csv <- qzwslrm_example_input(\"csv\") tbl_ebv_csv <- readr_ebv(ps_path = sexdf_csv, ps_format = \"csv\",                       ps_animal_col_name = \"animal\", ps_ebv_col_name = \"ebv\") #> Rows: 4995 Columns: 4 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (4): animal, nrprg, trait, ebv #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. tbl_ebv_csv #> # A tibble: 4,995 × 2 #>    animal      ebv #>     <dbl>    <dbl> #>  1      1 -0.215   #>  2      2  0.129   #>  3      3  0.463   #>  4      4 -0.154   #>  5      5  0.0779  #>  6      6 -0.136   #>  7      7 -0.0913  #>  8      8 -0.00620 #>  9      9 -0.0198  #> 10     10  0.170   #> # … with 4,985 more rows sexdf_delim <- qzwslrm_example_input(ps_data_format = \"delim\") tbl_ebv_table <- readr_ebv(ps_path = sexdf_delim, ps_format = \"table\",                            ps_animal_col_name = \"animal\", ps_ebv_col_name = \"ebv\") #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   animal = col_double(), #>   nrprg = col_double(), #>   trait = col_double(), #>   ebv = col_double() #> ) tbl_ebv_table #> # A tibble: 4,995 × 2 #>    animal      ebv #>     <dbl>    <dbl> #>  1      1 -0.215   #>  2      2  0.129   #>  3      3  0.463   #>  4      4 -0.154   #>  5      5  0.0779  #>  6      6 -0.136   #>  7      7 -0.0913  #>  8      8 -0.00620 #>  9      9 -0.0198  #> 10     10  0.170   #> # … with 4,985 more rows"},{"path":"/articles/qzwslrm_dev.html","id":"summary-output","dir":"Articles","previous_headings":"","what":"Summary Output","title":"Development of Package qzwslrm","text":"output validation function formatted using summary function summary_lrm().","code":"tbl_ebv_whole <- readr_ebv(ps_path = qzwslrm_example_solani(\"whole\"), ps_format = \"table\",                             pn_ebv_col_idx = 4) #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   X1 = col_double(), #>   X2 = col_double(), #>   X3 = col_double(), #>   X4 = col_double(), #>   X5 = col_logical() #> ) #> Warning: 1151 parsing failures. #> row col  expected    actual                                                                             file #>   5  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   7  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   8  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   9  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>  14  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #> ... ... ......... ......... ................................................................................ #> See problems(...) for more details. tbl_ebv_partial <- readr_ebv(ps_path = qzwslrm_example_solani(\"partial\"), ps_format = \"table\",                             pn_ebv_col_idx = 4) #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   X1 = col_double(), #>   X2 = col_double(), #>   X3 = col_double(), #>   X4 = col_double(), #>   X5 = col_logical() #> ) #> Warning: 1156 parsing failures. #> row col  expected    actual                                                                               file #>   5  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   7  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   8  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   9  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>  14  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #> ... ... ......... ......... .................................................................................. #> See problems(...) for more details. summary_lrm(l_val_result <- val_ebv_lrm(pvec_ebv_partial = tbl_ebv_partial$ebv,                               pvec_ebv_whole = tbl_ebv_whole$ebv)) #>  #> Bias between partial and whole:  -0.0061 #> Regression whole on partial:         1.0377 #> Correlation whole and partial:       0.9873 #> Regression partial on whole:         0.9393"},{"path":"/articles/qzwslrm_dev.html","id":"result-tibble","dir":"Articles","previous_headings":"","what":"Result Tibble","title":"Development of Package qzwslrm","text":"results can also converted tibble. can useful output table","code":"tbl_ebv_whole <- readr_ebv(ps_path = qzwslrm_example_solani(\"whole\"), ps_format = \"table\",                             pn_ebv_col_idx = 4) #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   X1 = col_double(), #>   X2 = col_double(), #>   X3 = col_double(), #>   X4 = col_double(), #>   X5 = col_logical() #> ) #> Warning: 1151 parsing failures. #> row col  expected    actual                                                                             file #>   5  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   7  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   8  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   9  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>  14  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #> ... ... ......... ......... ................................................................................ #> See problems(...) for more details.  tbl_ebv_partial <- readr_ebv(ps_path = qzwslrm_example_solani(\"partial\"), ps_format = \"table\",                               pn_ebv_col_idx = 4) #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   X1 = col_double(), #>   X2 = col_double(), #>   X3 = col_double(), #>   X4 = col_double(), #>   X5 = col_logical() #> ) #> Warning: 1156 parsing failures. #> row col  expected    actual                                                                               file #>   5  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   7  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   8  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   9  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>  14  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #> ... ... ......... ......... .................................................................................. #> See problems(...) for more details.  tibble_lrm(l_val_result <- val_ebv_lrm(pvec_ebv_partial = tbl_ebv_partial$ebv,                                          pvec_ebv_whole = tbl_ebv_whole$ebv)) #> # A tibble: 4 × 2 #>   `Validation Statistic`           Value #>   <chr>                            <dbl> #> 1 Bias between partial and whole -0.0061 #> 2 Regression whole on partial     1.04   #> 3 Correlation whole and partial   0.987  #> 4 Regression partial on whole     0.939"},{"path":"/articles/qzwslrm_dev.html","id":"scatterplots-of-ebv-from-whole-and-partial-data","dir":"Articles","previous_headings":"","what":"Scatterplots of EBV from Whole and Partial Data","title":"Development of Package qzwslrm","text":"function scatterplot_lrm() creates scatterplot EBV whole partial data  plot shows scatterplot ebv whole data partial data. blue line linear smoothed regression line red line expected regression line slope \\(1\\).","code":"tbl_ebv_whole <- readr_ebv(ps_path = qzwslrm_example_solani(\"whole\"), ps_format = \"table\",                             pn_ebv_col_idx = 4) tbl_ebv_partial <- readr_ebv(ps_path = qzwslrm_example_solani(\"partial\"), ps_format = \"table\",                               pn_ebv_col_idx = 4) p <- scatterplot_lrm(tbl_ebv_whole, tbl_ebv_partial) print(p)"},{"path":"/articles/qzwslrm_ebv_mix99.html","id":"disclaimer","dir":"Articles","previous_headings":"","what":"Disclaimer","title":"Prediction of Breeding Values Using MiX99","text":"required steps run prediction breeding values documented.","code":""},{"path":"/articles/qzwslrm_ebv_mix99.html","id":"mix99","dir":"Articles","previous_headings":"","what":"MiX99","title":"Prediction of Breeding Values Using MiX99","text":"Available versions MiX99 linked directory /qualstorzws01/data_projekte/linuxBin. latest version available suffix pro attached commands. examples directory, way different analyses run can seen. basic commands required parameters specified -called CLIM file .clm.","code":"mix99i_pro AM.clm  > mix99i.log mix99s_pro -s      > mix99s.log"},{"path":"/articles/qzwslrm_ebv_mix99.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example Data","title":"Prediction of Breeding Values Using MiX99","text":"described separate vignette Generating Test Data example dataset simulated using QMSim. resulting simulation output prepared analysed MiX99. order simple pipeline analysis, input data copied working directory analysis started.","code":""},{"path":"/articles/qzwslrm_ebv_mix99.html","id":"prepare-mix99-input-files","dir":"Articles","previous_headings":"","what":"Prepare MiX99 Input Files","title":"Prediction of Breeding Values Using MiX99","text":"section shows manual preparation MiX99 input files. can easier done using package qzwsmix99rt. content directory /tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/p1_example copied working directory. done function prepare_example_p1() returns working directory data files copied","code":"s_mix99_dir <- system.file(\"extdata\", \"mix99\", \"p1_example\", package = \"qzwslrm\") list.files(path = s_mix99_dir) #> [1] \"p1_data_001.clm\" \"p1_data_001.dat\" \"p1_data_001.ped\" \"p1_data_001.var\" s_mix99_work_dir <- qzwslrm::prepare_example_p1() list.files(s_mix99_work_dir)"},{"path":"/articles/qzwslrm_ebv_mix99.html","id":"run-mix99","dir":"Articles","previous_headings":"","what":"Run MiX99","title":"Prediction of Breeding Values Using MiX99","text":"shown documentation, evaluation MiX99 run two steps. first step runs mix99i_pro CLIM file input. mix99s_pro solves system equations. two commands prepared program run via system() function. output captured character vector vec_mix99_out. can inspected ","code":"s_clim_file <- \"p1_data_001.clm\" s_mix99_cmd <- paste0(\"cd \", s_mix99_work_dir, \" && mix99i_pro \", s_clim_file, \" && mix99s_pro -s \") vec_mix99_out <- system(command = s_mix99_cmd, intern = TRUE) cat(paste0(head(vec_mix99_out), collapse = \"\\n\"), \"\\n\") cat(paste0(tail(vec_mix99_out), collapse = \"\\n\"), \"\\n\")"},{"path":"/articles/qzwslrm_ebv_mix99.html","id":"clean-up-work-directory","dir":"Articles","previous_headings":"","what":"Clean Up Work Directory","title":"Prediction of Breeding Values Using MiX99","text":"","code":"if (fs::dir_exists(path = s_mix99_work_dir)) fs::dir_delete(path = s_mix99_work_dir)"},{"path":"/articles/qzwslrm_ebv_mix99.html","id":"data-preparation-using-the-package-qzwsmix99rt","dir":"Articles","previous_headings":"","what":"Data Preparation Using the Package qzwsmix99rt","title":"Prediction of Breeding Values Using MiX99","text":"package qzwsmix99rt can used convert QMSim output MiX99 input simple animal model sex fixed effect. required, model complexity can extended. first step check whether package qzwsmix99rt available.","code":"# remove.packages(\"qzwsmix99rt\") if (!is.element(\"qzwsmix99rt\", installed.packages()))    remotes::install_github(repo = \"fbzwsqualitasag/qzwsmix99rt\", dependencies = TRUE, upgrade = 'never') #> Downloading GitHub repo fbzwsqualitasag/qzwsmix99rt@HEAD #> * checking for file ‘/tmp/Rtmp3LJDCm/remotes596c04458a/fbzwsqualitasag-qzwsmix99rt-3bd9118/DESCRIPTION’ ... OK #> * preparing ‘qzwsmix99rt’: #> * checking DESCRIPTION meta-information ... OK #> * checking for LF line-endings in source and make files and shell scripts #> * checking for empty or unneeded directories #> Omitted ‘LazyData’ from DESCRIPTION #> * building ‘qzwsmix99rt_0.1.0.tar.gz’ #> Installing package into '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2' #> (as 'lib' is unspecified)"},{"path":"/articles/qzwslrm_ebv_mix99.html","id":"conversion-of-qmsim-ouput-to-mix99-input","dir":"Articles","previous_headings":"Data Preparation Using the Package qzwsmix99rt","what":"Conversion of QMSim Ouput to MiX99 Input","title":"Prediction of Breeding Values Using MiX99","text":"QMSim output file given conversion done output checked ","code":"(s_qm_out_path <- system.file(\"extdata\", \"qmsim\", \"p1_data_001.txt\", package = \"qzwslrm\")) #> [1] \"/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/qmsim/p1_data_001.txt\" s_tmp_dir <- tempdir() s_out_dir_whole <- file.path(s_tmp_dir, 'mix99_work_whole_data') qzwsmix99rt::convert_qmsim_to_mix99(ps_qm_path = s_qm_out_path,                                     ps_out_dir = s_out_dir_whole,                                     pl_vcmp      = list(genetic_variance = 0.1, residual_variance = 0.9)) #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   Progeny = col_double(), #>   Sire = col_double(), #>   Dam = col_double(), #>   Sex = col_character(), #>   G = col_double(), #>   NMPrg = col_double(), #>   NFPrg = col_double(), #>   F = col_double(), #>   Homo = col_double(), #>   Phen = col_double(), #>   Res = col_double(), #>   Polygene = col_double(), #>   QTL = col_double(), #>   Final_EBV = col_double() #> ) list.files(path = s_out_dir_whole) #> [1] \"20220316092647_mix99.clm\" \"20220316092647_mix99.dat\" #> [3] \"20220316092647_mix99.ped\" \"20220316092647_mix99.var\""},{"path":"/articles/qzwslrm_ebv_mix99.html","id":"run-mix99-1","dir":"Articles","previous_headings":"Data Preparation Using the Package qzwsmix99rt","what":"Run MiX99","title":"Prediction of Breeding Values Using MiX99","text":"MiX99 run created input files. Check results breeding values stored result file “Solani”. file can read Comparing EBVs different properties columns ebv result file Depending contrast chosen restrictions, sum add \\(0\\). Reading solani fread()","code":"qzwsmix99rt::run_mix99(ps_work_dir = s_out_dir_whole) list.files(path = s_out_dir_whole) #>  [1] \"20220316092647_mix99.clm\" \"20220316092647_mix99.dat\" #>  [3] \"20220316092647_mix99.ped\" \"20220316092647_mix99.var\" #>  [5] \"20220316092655_mix99.log\" \"ARlog\"                    #>  [7] \"Conlog\"                   \"Memlog\"                   #>  [9] \"MiX99_DIR.DIR\"            \"MiX99_IN.DIR\"             #> [11] \"MiX99_IN.OPT\"             \"MiX99.lst\"                #> [13] \"Modlog\"                   \"OK_mix99i\"                #> [15] \"OK_mix99s\"                \"original_blockcode.dat\"   #> [17] \"Parlog\"                   \"Resid.List\"               #> [19] \"Solani\"                   \"Solfix\"                   #> [21] \"Solvec\"                   \"Tm10.trco0\"               #> [23] \"Tmp0.para\"                \"Tmp1.code\"                #> [25] \"Tmp4.pedi0\"               \"Tmp5.clas0\"               #> [27] \"Tmp6.diab0\"               \"Tmp9.strc\"                #> [29] \"Tralog\" s_solani_path_whole <- file.path(s_out_dir_whole, \"Solani\") vec_col_names <- c(\"animal\", \"nrprg\", \"trait\", \"ebv\") l_col_types <- readr::cols(animal = readr::col_integer(),                            nprg = readr::col_integer(),                            trait = readr::col_integer(),                            ebv = readr::col_double()) tbl_solani_whole <- readr::read_table(file = s_solani_path_whole, col_names = vec_col_names, col_types = l_col_types) #> Warning: The following named parsers don't match the column names: nprg #> Warning: 3844 parsing failures. #> row col  expected    actual                                           file #>   1  -- 4 columns 5 columns '/tmp/Rtmp3LJDCm/mix99_work_whole_data/Solani' #>   2  -- 4 columns 5 columns '/tmp/Rtmp3LJDCm/mix99_work_whole_data/Solani' #>   3  -- 4 columns 5 columns '/tmp/Rtmp3LJDCm/mix99_work_whole_data/Solani' #>   4  -- 4 columns 5 columns '/tmp/Rtmp3LJDCm/mix99_work_whole_data/Solani' #>   6  -- 4 columns 5 columns '/tmp/Rtmp3LJDCm/mix99_work_whole_data/Solani' #> ... ... ......... ......... .............................................. #> See problems(...) for more details. df_solani_whole <- read.table(file = s_solani_path_whole, sep = \"\", header = FALSE) df_solani_whole[1:10,] #>    V1 V2 V3         V4 #> 1   1 10  1 -0.2142200 #> 2   2 30  1  0.1096000 #> 3   3 90  1  0.4845300 #> 4   4 10  1 -0.1543200 #> 5   5 20  1  0.0766110 #> 6   6 20  1 -0.1354800 #> 7   7 20  1 -0.0928440 #> 8   8 10  1 -0.0059609 #> 9   9 10  1 -0.0130210 #> 10 10 60  1  0.1806400 summary(df_solani_whole[,4]) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> -0.3550  0.0847  0.2500  0.2556  0.4163  0.8965 sum(df_solani_whole[,4]) #> [1] 1276.597 summary(tbl_solani_whole$ebv) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> -0.3550  0.0847  0.2500  0.2556  0.4163  0.8965 sum(tbl_solani_whole$ebv) #> [1] 1276.597 dt_solani_whole <- data.table::fread(file = s_solani_path_whole, header = FALSE) dt_solani_whole[1:10,] #>     V1 V2 V3         V4 #>  1:  1 10  1 -0.2142200 #>  2:  2 30  1  0.1096000 #>  3:  3 90  1  0.4845300 #>  4:  4 10  1 -0.1543200 #>  5:  5 20  1  0.0766110 #>  6:  6 20  1 -0.1354800 #>  7:  7 20  1 -0.0928440 #>  8:  8 10  1 -0.0059609 #>  9:  9 10  1 -0.0130210 #> 10: 10 60  1  0.1806400 summary(dt_solani_whole[,4]) #>        V4          #>  Min.   :-0.3550   #>  1st Qu.: 0.0847   #>  Median : 0.2500   #>  Mean   : 0.2556   #>  3rd Qu.: 0.4163   #>  Max.   : 0.8965 sum(dt_solani_whole[,4]) #> [1] 1276.597"},{"path":"/articles/qzwslrm_ebv_mix99.html","id":"partial-data","dir":"Articles","previous_headings":"","what":"Partial Data","title":"Prediction of Breeding Values Using MiX99","text":"partial data, setting phenotypes last generation missing predicting breeding values based reduced dataset. Based QMSim output, determine records set missing. generation record contained animals last generation set missing phenotype column phenotypes animals set missing. partial dataset used prediction breeding values partial data. Checking content working directory partial dataset Breeding values predicted using Checking results type statistics ebv partial data","code":"tbl_qm_partial <- qzwsmix99rt::read_qmsim(ps_path = s_qm_out_path) #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   Progeny = col_double(), #>   Sire = col_double(), #>   Dam = col_double(), #>   Sex = col_character(), #>   G = col_double(), #>   NMPrg = col_double(), #>   NFPrg = col_double(), #>   F = col_double(), #>   Homo = col_double(), #>   Phen = col_double(), #>   Res = col_double(), #>   Polygene = col_double(), #>   QTL = col_double(), #>   Final_EBV = col_double() #> ) tbl_qm_partial #> # A tibble: 4,995 × 14 #>    Progeny  Sire   Dam Sex       G NMPrg NFPrg     F  Homo  Phen   Res Polygene #>      <dbl> <dbl> <dbl> <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>    <dbl> #>  1       1     0     0 M         0     4     6     0 0.701    NA     0        0 #>  2       2     0     0 M         0    14    16     0 0.703    NA     0        0 #>  3       3     0     0 M         0    35    55     0 0.693    NA     0        0 #>  4       4     0     0 M         0     5     5     0 0.710    NA     0        0 #>  5       5     0     0 M         0    12     8     0 0.694    NA     0        0 #>  6       6     0     0 M         0     7    13     0 0.694    NA     0        0 #>  7       7     0     0 M         0    13     7     0 0.704    NA     0        0 #>  8       8     0     0 M         0     3     7     0 0.689    NA     0        0 #>  9       9     0     0 M         0     5     5     0 0.699    NA     0        0 #> 10      10     0     0 M         0    19    41     0 0.697    NA     0        0 #> # … with 4,985 more rows, and 2 more variables: QTL <dbl>, Final_EBV <dbl> summary(tbl_qm_partial$G) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   0.000   2.000   5.000   4.955   8.000  10.000 tbl_qm_partial[tbl_qm_partial$G == 10, ] #> # A tibble: 450 × 14 #>    Progeny  Sire   Dam Sex       G NMPrg NFPrg       F  Homo   Phen    Res #>      <dbl> <dbl> <dbl> <chr> <dbl> <dbl> <dbl>   <dbl> <dbl>  <dbl>  <dbl> #>  1    4546  1878  2400 F        10     0     0 0.00781 0.688 -0.165 -0.529 #>  2    4547  4452  1757 M        10     0     0 0       0.706 NA      0     #>  3    4548  2795  3242 M        10     0     0 0.0156  0.720 NA      0     #>  4    4549  3229  3911 F        10     0     0 0.0268  0.719  0.499 -0.576 #>  5    4550  4545  4265 F        10     0     0 0.0341  0.695  1.91   1.16  #>  6    4551  4497  2332 F        10     0     0 0.0200  0.717  0.300 -0.340 #>  7    4552  2762  3135 M        10     0     0 0.0127  0.699 NA      0     #>  8    4553  4330   312 F        10     0     0 0       0.699 -1.11  -1.68  #>  9    4554  3853  3864 M        10     0     0 0.0189  0.708 NA      0     #> 10    4555  3423  2754 M        10     0     0 0.0215  0.695 NA      0     #> # … with 440 more rows, and 3 more variables: Polygene <dbl>, QTL <dbl>, #> #   Final_EBV <dbl> tbl_qm_partial[tbl_qm_partial$G == 10, ]$Phen <- NA tbl_qm_partial[tbl_qm_partial$G == 10, ] #> # A tibble: 450 × 14 #>    Progeny  Sire   Dam Sex       G NMPrg NFPrg       F  Homo  Phen    Res #>      <dbl> <dbl> <dbl> <chr> <dbl> <dbl> <dbl>   <dbl> <dbl> <dbl>  <dbl> #>  1    4546  1878  2400 F        10     0     0 0.00781 0.688    NA -0.529 #>  2    4547  4452  1757 M        10     0     0 0       0.706    NA  0     #>  3    4548  2795  3242 M        10     0     0 0.0156  0.720    NA  0     #>  4    4549  3229  3911 F        10     0     0 0.0268  0.719    NA -0.576 #>  5    4550  4545  4265 F        10     0     0 0.0341  0.695    NA  1.16  #>  6    4551  4497  2332 F        10     0     0 0.0200  0.717    NA -0.340 #>  7    4552  2762  3135 M        10     0     0 0.0127  0.699    NA  0     #>  8    4553  4330   312 F        10     0     0 0       0.699    NA -1.68  #>  9    4554  3853  3864 M        10     0     0 0.0189  0.708    NA  0     #> 10    4555  3423  2754 M        10     0     0 0.0215  0.695    NA  0     #> # … with 440 more rows, and 3 more variables: Polygene <dbl>, QTL <dbl>, #> #   Final_EBV <dbl> s_out_dir_partial <- file.path(s_tmp_dir, 'mix99_work_partial_data') qzwsmix99rt::convert_qmsim_to_mix99(ptbl_qm    = tbl_qm_partial,                                     ps_out_dir = s_out_dir_partial,                                     pl_vcmp    = list(genetic_variance = 0.1, residual_variance = 0.9)) list.files(s_out_dir_partial) #> [1] \"20220316092656_mix99.clm\" \"20220316092656_mix99.dat\" #> [3] \"20220316092656_mix99.ped\" \"20220316092656_mix99.var\" qzwsmix99rt::run_mix99(ps_work_dir = s_out_dir_partial) list.files(s_out_dir_partial) #>  [1] \"20220316092656_mix99.clm\" \"20220316092656_mix99.dat\" #>  [3] \"20220316092656_mix99.ped\" \"20220316092656_mix99.var\" #>  [5] \"20220316092657_mix99.log\" \"ARlog\"                    #>  [7] \"Conlog\"                   \"Memlog\"                   #>  [9] \"MiX99_DIR.DIR\"            \"MiX99_IN.DIR\"             #> [11] \"MiX99_IN.OPT\"             \"MiX99.lst\"                #> [13] \"Modlog\"                   \"OK_mix99i\"                #> [15] \"OK_mix99s\"                \"original_blockcode.dat\"   #> [17] \"Parlog\"                   \"Resid.List\"               #> [19] \"Solani\"                   \"Solfix\"                   #> [21] \"Solvec\"                   \"Tm10.trco0\"               #> [23] \"Tmp0.para\"                \"Tmp1.code\"                #> [25] \"Tmp4.pedi0\"               \"Tmp5.clas0\"               #> [27] \"Tmp6.diab0\"               \"Tmp9.strc\"                #> [29] \"Tralog\" s_solani_path_partial <- file.path(s_out_dir_partial, \"Solani\") vec_col_names <- c(\"animal\", \"nrprg\", \"trait\", \"ebv\") l_col_types <- readr::cols(animal = readr::col_integer(),                            nprg = readr::col_integer(),                            trait = readr::col_integer(),                            ebv = readr::col_double()) tbl_solani_partial <- readr::read_table(file = s_solani_path_partial, col_names = vec_col_names, col_types = l_col_types) #> Warning: The following named parsers don't match the column names: nprg #> Warning: 3839 parsing failures. #> row col  expected    actual                                             file #>   1  -- 4 columns 5 columns '/tmp/Rtmp3LJDCm/mix99_work_partial_data/Solani' #>   2  -- 4 columns 5 columns '/tmp/Rtmp3LJDCm/mix99_work_partial_data/Solani' #>   3  -- 4 columns 5 columns '/tmp/Rtmp3LJDCm/mix99_work_partial_data/Solani' #>   4  -- 4 columns 5 columns '/tmp/Rtmp3LJDCm/mix99_work_partial_data/Solani' #>   6  -- 4 columns 5 columns '/tmp/Rtmp3LJDCm/mix99_work_partial_data/Solani' #> ... ... ......... ......... ................................................ #> See problems(...) for more details. summary(tbl_solani_partial$ebv) #>     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  #> -0.35504  0.08577  0.24813  0.24947  0.42129  0.74823"},{"path":"/articles/qzwslrm_ebv_mix99.html","id":"statistics-based-on-the-lr-methods","dir":"Articles","previous_headings":"","what":"Statistics based on the LR-Methods","title":"Prediction of Breeding Values Using MiX99","text":"first preparatory, step, extract vector ebv tibbles following statistics computed bias: \\(\\overline{\\hat{u}_p} - \\overline{\\hat{u}_w}\\) regression whole partial: \\(b_{w,p} = \\frac{cov(\\hat{u}_w,\\hat{u}_p)}{var(\\hat{u}_p)}\\) correlation whole partial: \\(r_{w,p} = \\frac{cov(\\hat{u}_w,\\hat{u}_p)}{\\sqrt{var(\\hat{u}_p)var(\\hat{u}_w)}}\\) regression partial whole: \\(b_{p,w} = \\frac{cov(\\hat{u}_w,\\hat{u}_p)}{var(\\hat{u}_w)}\\)","code":"vec_ebv_p <- tbl_solani_partial$ebv vec_ebv_w <- tbl_solani_whole$ebv length(vec_ebv_p) #> [1] 4995 length(vec_ebv_w) #> [1] 4995 (n_bias <- mean(vec_ebv_p) - mean(vec_ebv_w)) #> [1] -0.006104794 (n_reg_wp <- cov(vec_ebv_p, vec_ebv_w) / var(vec_ebv_p)) #> [1] 1.037712 (n_cor_wp <- cor(vec_ebv_p, vec_ebv_w)) #> [1] 0.987303 (n_reg_pw <- cov(vec_ebv_p, vec_ebv_w) / var(vec_ebv_w)) #> [1] 0.9393427"},{"path":"/articles/qzwslrm_ebv_mix99.html","id":"clean-up-work-directory-1","dir":"Articles","previous_headings":"","what":"Clean Up Work Directory","title":"Prediction of Breeding Values Using MiX99","text":"","code":"if (fs::dir_exists(path = s_tmp_dir)) fs::dir_delete(path = s_tmp_dir)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter von Rohr. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"von Rohr P (2022). qzwslrm: Validation Predicted Breeding Values Using LR-Method. R package version 0.1.2.","code":"@Manual{,   title = {qzwslrm: Validation of Predicted Breeding Values Using the LR-Method},   author = {Peter {von Rohr}},   year = {2022},   note = {R package version 0.1.2}, }"},{"path":"/index.html","id":"qzwslrm","dir":"","previous_headings":"","what":"Validation of Predicted Breeding Values Using the LR-Method","title":"Validation of Predicted Breeding Values Using the LR-Method","text":"goal qzwslrm provide set tools useful validations predicted breeding values using LR-Method.","code":""},{"path":"/index.html","id":"website","dir":"","previous_headings":"","what":"Website","title":"Validation of Predicted Breeding Values Using the LR-Method","text":"website package available : https://fbzwsqualitasag.github.io/qzwslrm/","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Validation of Predicted Breeding Values Using the LR-Method","text":"can install development version qzwslrm GitHub :","code":"# if (!is.element(\"devtools\", installed.packages()) install.packages(\"devtools\") devtools::install_github(\"fbzwsqualitasag/qzwslrm\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Validation of Predicted Breeding Values Using the LR-Method","text":"following example shows validation set predicted breeding values can run. command shows basic use case. functions can handle different use cases.","code":"library(qzwslrm) ## validation validate_ebv(pvec_ebv_partial = vec_ebv_partial, pvec_ebv_whole = vec_ebv_whole)"},{"path":"/reference/fread_solani.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Solani File using data.table — fread_solani","title":"Read Solani File using data.table — fread_solani","text":"solani result file MiX99 read using `data.table::fread()`","code":""},{"path":"/reference/fread_solani.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Solani File using data.table — fread_solani","text":"","code":"fread_solani(ps_path)"},{"path":"/reference/fread_solani.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Solani File using data.table — fread_solani","text":"ps_path path input file","code":""},{"path":"/reference/fread_solani.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Solani File using data.table — fread_solani","text":"DataTable content solani file","code":""},{"path":"/reference/fread_solani.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Solani File using data.table — fread_solani","text":"","code":"s_ebv_path_partial <- qzwslrm_example_solani(\"partial\") dt_solani <- fread_solani(ps_path = s_ebv_path_partial) #> Error in data.table::fread(file = s_solani_path_whole, header = FALSE): object 's_solani_path_whole' not found"},{"path":"/reference/get_qzwslrm_logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Create log4r Logger for package — get_qzwslrm_logger","title":"Create log4r Logger for package — get_qzwslrm_logger","text":"Create log4r Logger package","code":""},{"path":"/reference/get_qzwslrm_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create log4r Logger for package — get_qzwslrm_logger","text":"","code":"get_qzwslrm_logger(ps_logfile = \"qzwslrm.log\", ps_level = \"FATAL\")"},{"path":"/reference/get_qzwslrm_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create log4r Logger for package — get_qzwslrm_logger","text":"ps_logfile name logfile ps_level logger level","code":""},{"path":"/reference/get_qzwslrm_logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create log4r Logger for package — get_qzwslrm_logger","text":"qzwslrm_logger","code":""},{"path":"/reference/get_qzwslrm_logger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create log4r Logger for package — get_qzwslrm_logger","text":"","code":"if (FALSE) { qzwslrm_logger <- get_qzwslrm_logger() }"},{"path":"/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"/reference/prepare_example_p1.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Example Evaluation with p1 Data — prepare_example_p1","title":"Prepare Example Evaluation with p1 Data — prepare_example_p1","text":"example data part package copied working directory. example files can used run genetic evaluation","code":""},{"path":"/reference/prepare_example_p1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Example Evaluation with p1 Data — prepare_example_p1","text":"","code":"prepare_example_p1(   ps_work_dir = file.path(tempdir(), \"work_p1\"),   ps_source_dir = system.file(\"extdata\", \"mix99\", \"p1_example\", package = \"qzwslrm\"),   pb_force = FALSE,   pb_debug = FALSE,   plogger = NULL )"},{"path":"/reference/prepare_example_p1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Example Evaluation with p1 Data — prepare_example_p1","text":"ps_work_dir working directory example files ps_source_dir source directory example files copied pb_force forcing copy first deleting existing working directory pb_debug run debugging mode producing log messages plogger logr logger object","code":""},{"path":"/reference/qzwslrm_example_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to Input Example Files — qzwslrm_example_input","title":"Path to Input Example Files — qzwslrm_example_input","text":"path input files different formats contained package can obtained","code":""},{"path":"/reference/qzwslrm_example_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to Input Example Files — qzwslrm_example_input","text":"","code":"qzwslrm_example_input(ps_data_format)"},{"path":"/reference/qzwslrm_example_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path to Input Example Files — qzwslrm_example_input","text":"ps_data_format format input file","code":""},{"path":"/reference/qzwslrm_example_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Path to Input Example Files — qzwslrm_example_input","text":"path input file","code":""},{"path":"/reference/qzwslrm_example_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Path to Input Example Files — qzwslrm_example_input","text":"","code":"sexdf_csv <- qzwslrm_example_input(\"csv\")"},{"path":"/reference/qzwslrm_example_solani.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Path to Example Data — qzwslrm_example_solani","title":"Return Path to Example Data — qzwslrm_example_solani","text":"Return path example solani result file containing EBV either whole partial data.","code":""},{"path":"/reference/qzwslrm_example_solani.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Path to Example Data — qzwslrm_example_solani","text":"","code":"qzwslrm_example_solani(ps_data_type)"},{"path":"/reference/qzwslrm_example_solani.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Path to Example Data — qzwslrm_example_solani","text":"ps_data_type type data set can either 'partial' 'whole'","code":""},{"path":"/reference/qzwslrm_example_solani.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Path to Example Data — qzwslrm_example_solani","text":"path example data","code":""},{"path":"/reference/qzwslrm_example_solani.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Path to Example Data — qzwslrm_example_solani","text":"","code":"ed_path <- qzwslrm_example_solani('partial')"},{"path":"/reference/qzwslrm_log_debug.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for log4r debug — qzwslrm_log_debug","title":"Wrapper for log4r debug — qzwslrm_log_debug","text":"Wrapper log4r debug","code":""},{"path":"/reference/qzwslrm_log_debug.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for log4r debug — qzwslrm_log_debug","text":"","code":"qzwslrm_log_debug(plogger, ps_caller, ps_msg)"},{"path":"/reference/qzwslrm_log_debug.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for log4r debug — qzwslrm_log_debug","text":"plogger log4r logger object ps_caller function called ps_msg logging message","code":""},{"path":"/reference/qzwslrm_log_debug.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for log4r debug — qzwslrm_log_debug","text":"","code":"if (FALSE) { qzwslrm_logger <- get_qzwslrm_logger() qzwslrm_log_level(qzwslrm_logger, 'DEBUG') qzwslrm_log_debug(qzwslrm_logger, 'Examples', 'test message') }"},{"path":"/reference/qzwslrm_log_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for log4r error — qzwslrm_log_error","title":"Wrapper for log4r error — qzwslrm_log_error","text":"Wrapper log4r error","code":""},{"path":"/reference/qzwslrm_log_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for log4r error — qzwslrm_log_error","text":"","code":"qzwslrm_log_error(plogger, ps_caller, ps_msg)"},{"path":"/reference/qzwslrm_log_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for log4r error — qzwslrm_log_error","text":"plogger log4r logger object ps_caller function called ps_msg logging message","code":""},{"path":"/reference/qzwslrm_log_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for log4r error — qzwslrm_log_error","text":"","code":"if (FALSE) { qzwslrm_logger <- get_qzwslrm_logger() qzwslrm_log_level(qzwslrm_logger, 'ERROR') qzwslrm_log_error(qzwslrm_logger, 'Examples', 'test message') }"},{"path":"/reference/qzwslrm_log_fatal.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for log4r fatal — qzwslrm_log_fatal","title":"Wrapper for log4r fatal — qzwslrm_log_fatal","text":"Wrapper log4r fatal","code":""},{"path":"/reference/qzwslrm_log_fatal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for log4r fatal — qzwslrm_log_fatal","text":"","code":"qzwslrm_log_fatal(plogger, ps_caller, ps_msg)"},{"path":"/reference/qzwslrm_log_fatal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for log4r fatal — qzwslrm_log_fatal","text":"plogger log4r logger object ps_caller function called ps_msg logging message","code":""},{"path":"/reference/qzwslrm_log_fatal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for log4r fatal — qzwslrm_log_fatal","text":"","code":"if (FALSE) { qzwslrm_logger <- get_qzwslrm_logger() qzwslrm_log_level(qzwslrm_logger, 'FATAL') qzwslrm_log_fatal(qzwslrm_logger, 'Examples', 'test message') }"},{"path":"/reference/qzwslrm_log_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for log4r info — qzwslrm_log_info","title":"Wrapper for log4r info — qzwslrm_log_info","text":"Wrapper log4r info","code":""},{"path":"/reference/qzwslrm_log_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for log4r info — qzwslrm_log_info","text":"","code":"qzwslrm_log_info(plogger, ps_caller, ps_msg)"},{"path":"/reference/qzwslrm_log_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for log4r info — qzwslrm_log_info","text":"plogger log4r logger object ps_caller function called ps_msg logging message","code":""},{"path":"/reference/qzwslrm_log_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for log4r info — qzwslrm_log_info","text":"","code":"if (FALSE) { qzwslrm_logger <- get_qzwslrm_logger() qzwslrm_log_level(qzwslrm_logger, 'INFO') qzwslrm_log_info(qzwslrm_logger, 'Examples', 'test message') }"},{"path":"/reference/qzwslrm_log_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to set the level of a logger — qzwslrm_log_level","title":"Wrapper to set the level of a logger — qzwslrm_log_level","text":"Wrapper set level logger","code":""},{"path":"/reference/qzwslrm_log_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to set the level of a logger — qzwslrm_log_level","text":"","code":"qzwslrm_log_level(   plogger,   ps_level = c(\"DEBUG\", \"INFO\", \"WARN\", \"ERROR\", \"FATAL\") )"},{"path":"/reference/qzwslrm_log_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to set the level of a logger — qzwslrm_log_level","text":"plogger log4r logger object ps_level new level plogger","code":""},{"path":"/reference/qzwslrm_log_level.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper to set the level of a logger — qzwslrm_log_level","text":"","code":"if (FALSE) { qzwslrm_logger <- get_qzwslrm_logger() qzwslrm_log_level(qzwslrm_logger, 'INFO') }"},{"path":"/reference/qzwslrm_log_warn.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for log4r warn — qzwslrm_log_warn","title":"Wrapper for log4r warn — qzwslrm_log_warn","text":"Wrapper log4r warn","code":""},{"path":"/reference/qzwslrm_log_warn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for log4r warn — qzwslrm_log_warn","text":"","code":"qzwslrm_log_warn(plogger, ps_caller, ps_msg)"},{"path":"/reference/qzwslrm_log_warn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for log4r warn — qzwslrm_log_warn","text":"plogger log4r logger object ps_caller function called ps_msg logging message","code":""},{"path":"/reference/qzwslrm_log_warn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for log4r warn — qzwslrm_log_warn","text":"","code":"if (FALSE) { qzwslrm_logger <- get_qzwslrm_logger() qzwslrm_log_level(qzwslrm_logger, 'WARN') qzwslrm_log_warn(qzwslrm_logger, 'Examples', 'test message') }"},{"path":"/reference/read.solani.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Solani File using R-Base read.table — read.solani","title":"Read Solani File using R-Base read.table — read.solani","text":"function `read.table()` R-base used read solani file.","code":""},{"path":"/reference/read.solani.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Solani File using R-Base read.table — read.solani","text":"","code":"read.solani(ps_path)"},{"path":"/reference/read.solani.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Solani File using R-Base read.table — read.solani","text":"ps_path path input file","code":""},{"path":"/reference/read.solani.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Solani File using R-Base read.table — read.solani","text":"dataframe content solani file","code":""},{"path":"/reference/read.solani.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Solani File using R-Base read.table — read.solani","text":"","code":"s_ebv_path_partial <- qzwslrm_example_solani(\"partial\") df_solani <- read.solani(ps_path = s_ebv_path_partial)"},{"path":"/reference/readr_ebv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Estimated Breeding Values (EBV) from Input File — readr_ebv","title":"Read Estimated Breeding Values (EBV) from Input File — readr_ebv","text":"Given result file containing EBV possibly information, column AnimalID EBV extracted returned two column result tibble. result tibble contains AnimalID first column EBV second column.","code":""},{"path":"/reference/readr_ebv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Estimated Breeding Values (EBV) from Input File — readr_ebv","text":"","code":"readr_ebv(   ps_path,   ps_format,   ps_delim_char = \" \",   ps_animal_col_name = NULL,   pn_animal_col_idx = 1,   ps_ebv_col_name = NULL,   pn_ebv_col_idx = NULL )"},{"path":"/reference/readr_ebv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Estimated Breeding Values (EBV) from Input File — readr_ebv","text":"ps_path path EBV input file ps_format format EBV input file, can either \"csv\", \"csv2\", \"delim\" \"table\" ps_delim_char column delimiting character format \"delim\" ps_animal_col_name column name animal ID column pn_animal_col_idx column index animal ID column ps_ebv_col_name column name ebv column pn_ebv_col_idx column index ebv column","code":""},{"path":"/reference/readr_ebv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Estimated Breeding Values (EBV) from Input File — readr_ebv","text":"ebv result tibble","code":""},{"path":"/reference/readr_ebv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Estimated Breeding Values (EBV) from Input File — readr_ebv","text":"EBV input file can different formats. Possible formats considered can \"csv\", \"csv2\", \"delim\", \"table\". format specifiers point respective function `readr` package used importing.","code":""},{"path":"/reference/readr_ebv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Estimated Breeding Values (EBV) from Input File — readr_ebv","text":"","code":"s_ebv_path_partial <- qzwslrm_example_solani(\"partial\") tbl_ebv <- readr_ebv(ps_path = s_ebv_path_partial, ps_format = \"table\") #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   X1 = col_double(), #>   X2 = col_double(), #>   X3 = col_double(), #>   X4 = col_double(), #>   X5 = col_logical() #> ) #> Warning: 1156 parsing failures. #> row col  expected    actual                                                                               file #>   5  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   7  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   8  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   9  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>  14  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #> ... ... ......... ......... .................................................................................. #> See problems(...) for more details."},{"path":"/reference/readr_solani.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Solani File Using readr — readr_solani","title":"Read Solani File Using readr — readr_solani","text":"file Solani contains predicted breeding values computed MiX99. result file read using `readr::read_table()`","code":""},{"path":"/reference/readr_solani.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Solani File Using readr — readr_solani","text":"","code":"readr_solani(   ps_path,   pvec_col_names = c(\"animal\", \"nrprg\", \"trait\", \"ebv\"),   pl_col_types = readr::cols(animal = readr::col_integer(), nprg =     readr::col_integer(), trait = readr::col_integer(), ebv = readr::col_double()) )"},{"path":"/reference/readr_solani.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Solani File Using readr — readr_solani","text":"ps_path path input file pvec_col_names vector column names pl_col_types col type specifications using `readr::cols()`","code":""},{"path":"/reference/readr_solani.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Solani File Using readr — readr_solani","text":"tibble predicted breeding values","code":""},{"path":"/reference/readr_solani.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Solani File Using readr — readr_solani","text":"","code":"s_ebv_path_partial <- qzwslrm_example_solani(\"partial\") tbl_solani_partial <- readr_solani(ps_path = s_ebv_path_partial) #> Warning: The following named parsers don't match the column names: nprg #> Warning: 3839 parsing failures. #> row col  expected    actual                                                                               file #>   1  -- 4 columns 5 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   2  -- 4 columns 5 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   3  -- 4 columns 5 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   4  -- 4 columns 5 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   6  -- 4 columns 5 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #> ... ... ......... ......... .................................................................................. #> See problems(...) for more details."},{"path":"/reference/scatterplot_lrm.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatter Plot Based on Validation Input — scatterplot_lrm","title":"Scatter Plot Based on Validation Input — scatterplot_lrm","text":"EBV validation done shown scatterplot","code":""},{"path":"/reference/scatterplot_lrm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatter Plot Based on Validation Input — scatterplot_lrm","text":"","code":"scatterplot_lrm(ptbl_ebv_whole, ptbl_ebv_partial)"},{"path":"/reference/scatterplot_lrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatter Plot Based on Validation Input — scatterplot_lrm","text":"ptbl_ebv_whole ebv based whole data ptbl_ebv_partial ebv based partial data","code":""},{"path":"/reference/scatterplot_lrm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatter Plot Based on Validation Input — scatterplot_lrm","text":"ggplot2 objection conaining scatterplot","code":""},{"path":"/reference/scatterplot_lrm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatter Plot Based on Validation Input — scatterplot_lrm","text":"","code":"tbl_ebv_whole <- readr_ebv(ps_path = qzwslrm_example_solani(\"whole\"), ps_format = \"table\",                           pn_ebv_col_idx = 4) #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   X1 = col_double(), #>   X2 = col_double(), #>   X3 = col_double(), #>   X4 = col_double(), #>   X5 = col_logical() #> ) #> Warning: 1151 parsing failures. #> row col  expected    actual                                                                             file #>   5  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   7  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   8  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   9  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>  14  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #> ... ... ......... ......... ................................................................................ #> See problems(...) for more details. tbl_ebv_partial <- readr_ebv(ps_path = qzwslrm_example_solani(\"partial\"), ps_format = \"table\",                             pn_ebv_col_idx = 4) #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   X1 = col_double(), #>   X2 = col_double(), #>   X3 = col_double(), #>   X4 = col_double(), #>   X5 = col_logical() #> ) #> Warning: 1156 parsing failures. #> row col  expected    actual                                                                               file #>   5  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   7  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   8  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   9  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>  14  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #> ... ... ......... ......... .................................................................................. #> See problems(...) for more details. p <- scatterplot_lrm(tbl_ebv_whole, tbl_ebv_partial)"},{"path":"/reference/summary_lrm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of EBV Validation Results — summary_lrm","title":"Summary of EBV Validation Results — summary_lrm","text":"list validation results printed summary format.","code":""},{"path":"/reference/summary_lrm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of EBV Validation Results — summary_lrm","text":"","code":"summary_lrm(object, pn_digits = max(3L, getOption(\"digits\") - 3L))"},{"path":"/reference/summary_lrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of EBV Validation Results — summary_lrm","text":"object validation result pn_digits number digits used rounding results","code":""},{"path":"/reference/summary_lrm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of EBV Validation Results — summary_lrm","text":"","code":"tbl_ebv_whole <- readr_ebv(ps_path = qzwslrm_example_solani(\"whole\"), ps_format = \"table\",                            pn_ebv_col_idx = 4) #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   X1 = col_double(), #>   X2 = col_double(), #>   X3 = col_double(), #>   X4 = col_double(), #>   X5 = col_logical() #> ) #> Warning: 1151 parsing failures. #> row col  expected    actual                                                                             file #>   5  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   7  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   8  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   9  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>  14  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #> ... ... ......... ......... ................................................................................ #> See problems(...) for more details. tbl_ebv_partial <- readr_ebv(ps_path = qzwslrm_example_solani(\"partial\"), ps_format = \"table\",                              pn_ebv_col_idx = 4) #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   X1 = col_double(), #>   X2 = col_double(), #>   X3 = col_double(), #>   X4 = col_double(), #>   X5 = col_logical() #> ) #> Warning: 1156 parsing failures. #> row col  expected    actual                                                                               file #>   5  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   7  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   8  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   9  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>  14  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #> ... ... ......... ......... .................................................................................. #> See problems(...) for more details. summary_lrm(l_val_result <- val_ebv_lrm(pvec_ebv_partial = tbl_ebv_partial$ebv,                                         pvec_ebv_whole = tbl_ebv_whole$ebv)) #>  #> Bias between partial and whole: \t-0.0061 #> Regression whole on partial: \t\t1.0377 #> Correlation whole and partial: \t\t0.9873 #> Regression partial on whole: \t\t0.9393"},{"path":"/reference/tibble_lrm.html","id":null,"dir":"Reference","previous_headings":"","what":"Validation Results as Tibble — tibble_lrm","title":"Validation Results as Tibble — tibble_lrm","text":"EBV validation results converted tibble","code":""},{"path":"/reference/tibble_lrm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validation Results as Tibble — tibble_lrm","text":"","code":"tibble_lrm(object, pn_digits = max(3L, getOption(\"digits\") - 3L))"},{"path":"/reference/tibble_lrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validation Results as Tibble — tibble_lrm","text":"object validation result pn_digits number digits used rounding results","code":""},{"path":"/reference/tibble_lrm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validation Results as Tibble — tibble_lrm","text":"tibble validation results","code":""},{"path":"/reference/tibble_lrm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validation Results as Tibble — tibble_lrm","text":"","code":"tbl_ebv_whole <- readr_ebv(ps_path = qzwslrm_example_solani(\"whole\"), ps_format = \"table\",                            pn_ebv_col_idx = 4) #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   X1 = col_double(), #>   X2 = col_double(), #>   X3 = col_double(), #>   X4 = col_double(), #>   X5 = col_logical() #> ) #> Warning: 1151 parsing failures. #> row col  expected    actual                                                                             file #>   5  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   7  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   8  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>   9  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #>  14  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/whole_data/Solani' #> ... ... ......... ......... ................................................................................ #> See problems(...) for more details. tbl_ebv_partial <- readr_ebv(ps_path = qzwslrm_example_solani(\"partial\"), ps_format = \"table\",                              pn_ebv_col_idx = 4) #>  #> ── Column specification ──────────────────────────────────────────────────────── #> cols( #>   X1 = col_double(), #>   X2 = col_double(), #>   X3 = col_double(), #>   X4 = col_double(), #>   X5 = col_logical() #> ) #> Warning: 1156 parsing failures. #> row col  expected    actual                                                                               file #>   5  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   7  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   8  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>   9  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #>  14  -- 5 columns 4 columns '/tmp/RtmpQ6Sl2w/temp_libpath1e0d2c67f2/qzwslrm/extdata/mix99/partial_data/Solani' #> ... ... ......... ......... .................................................................................. #> See problems(...) for more details. tibble_lrm(l_val_result <- val_ebv_lrm(pvec_ebv_partial = tbl_ebv_partial$ebv,                                         pvec_ebv_whole = tbl_ebv_whole$ebv)) #> # A tibble: 4 × 2 #>   `Validation Statistic`           Value #>   <chr>                            <dbl> #> 1 Bias between partial and whole -0.0061 #> 2 Regression whole on partial     1.04   #> 3 Correlation whole and partial   0.987  #> 4 Regression partial on whole     0.939"},{"path":"/reference/val_ebv_lrm.html","id":null,"dir":"Reference","previous_headings":"","what":"Validation of Estimated Breeding Values (EBV) Using LR-Method — val_ebv_lrm","title":"Validation of Estimated Breeding Values (EBV) Using LR-Method — val_ebv_lrm","text":"Validation statistics EBV based bias, correlation regression coefficients EBV results based partial whole data sets computed.","code":""},{"path":"/reference/val_ebv_lrm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validation of Estimated Breeding Values (EBV) Using LR-Method — val_ebv_lrm","text":"","code":"val_ebv_lrm(pvec_ebv_partial, pvec_ebv_whole)"},{"path":"/reference/val_ebv_lrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validation of Estimated Breeding Values (EBV) Using LR-Method — val_ebv_lrm","text":"pvec_ebv_partial vector EBV partial data pvec_ebv_whole vector EBV whole data","code":""},{"path":"/reference/val_ebv_lrm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validation of Estimated Breeding Values (EBV) Using LR-Method — val_ebv_lrm","text":"list results containing bias, correlation regression coefficients","code":""},{"path":[]},{"path":"/news/index.html","id":"qzwslrm-012","dir":"Changelog","previous_headings":"","what":"qzwslrm 0.1.2","title":"qzwslrm 0.1.2","text":"Added HowTo vignette","code":""},{"path":"/news/index.html","id":"qzwslrm-011","dir":"Changelog","previous_headings":"","what":"qzwslrm 0.1.1","title":"qzwslrm 0.1.1","text":"Data preparation finished","code":""},{"path":"/news/index.html","id":"qzwslrm-0109000","dir":"Changelog","previous_headings":"","what":"qzwslrm 0.1.0.9000","title":"qzwslrm 0.1.0.9000","text":"Added NEWS.md file track changes package. Started development first functionalities","code":""}]
